% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smooth.construct.Matern.smooth.spec.R
\name{smooth.construct.Matern.smooth.spec}
\alias{smooth.construct.Matern.smooth.spec}
\title{Construct a Low-Rank Matern Basis Smooth Term}
\usage{
\method{smooth.construct}{Matern.smooth.spec}(object, data, knots)
}
\arguments{
\item{object}{A smooth specification object created by `s()`, containing user-defined smoothing parameters.}

\item{data}{A data frame containing the covariate for the smooth term.}

\item{knots}{A list of knots supplied by the user or automatically generated from `x`.}
}
\value{
A smooth term object of class `"Matern.smooth"`, `"mgcv.smooth"`, containing:
\itemize{
  \item `X`: The final design matrix based on a low-rank Matern basis.
  \item `S`: The smoothing penalty matrix.
  \item `rank`: The effective rank of the penalty matrix.
  \item `null.space.dim`: The dimension of the unpenalized null space.
  \item `null.project`: Projection matrix onto the null space.
  \item `smoothfun`: The function used to generate the Matern basis.
  \item `kappa_matern`: The selected quantiles used as knots for Matern splines.
  \item `lambda_matern`: The scale parameter for the Matern spline.
}
}
\description{
This function constructs a smooth term using a low-rank Matern basis representation.
The Matern basis is constructed based on a set of selected knots and a smoothing
scale parameter. Principal component analysis (PCA) is applied to reduce the rank,
ensuring that the number of retained components matches the specified smoothing
dimension (`k`).

The `m` parameter determines:
  - The number of knots (`nk`) used for generating the Matern basis (selected as
    quantiles of `x`).
  - The scale parameter (`lambda_matern`), which controls the smoothness of the Matern kernel.

The function returns a smooth term object containing the final design matrix, penalty matrix,
and metadata such as the selected Matern quantiles and scale parameters.
}
\examples{
\dontrun{
library(mgcv)
set.seed(42)
dat <- data.frame(x = runif(100), y = rnorm(100))
fit <- gam(y ~ s(x, bs="Matern", k=12, xt=list(para=list(scale=2))),
           data=dat, method="REML")
}

}
